<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: recycle.test Pages: 1 -->
<svg width="100%" height="100%" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<script type="text/ecmascript"><![CDATA[
/** 
 *  SVGPan library 1.2.1
 * ======================
 *
 * Given an unique existing element with id "viewport" (or when missing, the first g 
 * element), including the the library into any SVG adds the following capabilities:
 *
 *  - Mouse panning
 *  - Mouse zooming (using the wheel)
 *  - Object dragging
 *
 * You can configure the behavior of the pan/zoom/drag with the variables
 * listed in the CONFIGURATION section of this file.
 *
 * Known issues:
 *
 *  - Zooming (while panning) on Safari has still some issues
 *
 * Releases:
 *
 * 1.2.1, Mon Jul  4 00:33:18 CEST 2011, Andrea Leofreddi
 *	- Fixed a regression with mouse wheel (now working on Firefox 5)
 *	- Working with viewBox attribute (#4)
 *	- Added "use strict;" and fixed resulting warnings (#5)
 *	- Added configuration variables, dragging is disabled by default (#3)
 *
 * 1.2, Sat Mar 20 08:42:50 GMT 2010, Zeng Xiaohui
 *	Fixed a bug with browser mouse handler interaction
 *
 * 1.1, Wed Feb  3 17:39:33 GMT 2010, Zeng Xiaohui
 *	Updated the zoom code to support the mouse wheel on Safari/Chrome
 *
 * 1.0, Andrea Leofreddi
 *	First release
 *
 * This code is licensed under the following BSD license:
 *
 * Copyright 2009-2010 Andrea Leofreddi <a.leofreddi@itcharm.com>. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without modification, are
 * permitted provided that the following conditions are met:
 * 
 *    1. Redistributions of source code must retain the above copyright notice, this list of
 *       conditions and the following disclaimer.
 * 
 *    2. Redistributions in binary form must reproduce the above copyright notice, this list
 *       of conditions and the following disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 * 
 * THIS SOFTWARE IS PROVIDED BY Andrea Leofreddi ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
 * FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL Andrea Leofreddi OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON
 * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 * 
 * The views and conclusions contained in the software and documentation are those of the
 * authors and should not be interpreted as representing official policies, either expressed
 * or implied, of Andrea Leofreddi.
 */

"use strict";

/// CONFIGURATION 
/// ====>

var enablePan = 1; // 1 or 0: enable or disable panning (default enabled)
var enableZoom = 1; // 1 or 0: enable or disable zooming (default enabled)
var enableDrag = 0; // 1 or 0: enable or disable dragging (default disabled)

/// <====
/// END OF CONFIGURATION 

var root = document.documentElement;

var state = 'none', svgRoot, stateTarget, stateOrigin, stateTf;

setupHandlers(root);

/**
 * Register handlers
 */
function setupHandlers(root){
	setAttributes(root, {
		"onmouseup" : "handleMouseUp(evt)",
		"onmousedown" : "handleMouseDown(evt)",
		"onmousemove" : "handleMouseMove(evt)",
		//"onmouseout" : "handleMouseUp(evt)", // Decomment this to stop the pan functionality when dragging out of the SVG element
	});

	if(navigator.userAgent.toLowerCase().indexOf('webkit') >= 0)
		window.addEventListener('mousewheel', handleMouseWheel, false); // Chrome/Safari
	else
		window.addEventListener('DOMMouseScroll', handleMouseWheel, false); // Others
}

/**
 * Retrieves the root element for SVG manipulation. The element is then cached into the svgRoot global variable.
 */
function getRoot(root) {
	if(typeof(svgRoot) == "undefined") {
		var g = null;

		g = root.getElementById("viewport");

		if(g == null)
			g = root.getElementsByTagName('g')[0];

		if(g == null)
			alert('Unable to obtain SVG root element');

		setCTM(g, g.getCTM());

		g.removeAttribute("viewBox");

		svgRoot = g;
	}

	return svgRoot;
}

/**
 * Instance an SVGPoint object with given event coordinates.
 */
function getEventPoint(evt) {
	var p = root.createSVGPoint();

	p.x = evt.clientX;
	p.y = evt.clientY;

	return p;
}

/**
 * Sets the current transform matrix of an element.
 */
function setCTM(element, matrix) {
	var s = "matrix(" + matrix.a + "," + matrix.b + "," + matrix.c + "," + matrix.d + "," + matrix.e + "," + matrix.f + ")";

	element.setAttribute("transform", s);
}

/**
 * Dumps a matrix to a string (useful for debug).
 */
function dumpMatrix(matrix) {
	var s = "[ " + matrix.a + ", " + matrix.c + ", " + matrix.e + "\n  " + matrix.b + ", " + matrix.d + ", " + matrix.f + "\n  0, 0, 1 ]";

	return s;
}

/**
 * Sets attributes of an element.
 */
function setAttributes(element, attributes){
	for (var i in attributes)
		element.setAttributeNS(null, i, attributes[i]);
}

/**
 * Handle mouse wheel event.
 */
function handleMouseWheel(evt) {
	if(!enableZoom)
		return;

	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var delta;

	if(evt.wheelDelta)
		delta = evt.wheelDelta / 3600; // Chrome/Safari
	else
		delta = evt.detail / -90; // Mozilla

	var z = 1 + delta; // Zoom factor: 0.9/1.1

	var g = getRoot(svgDoc);
	
	var p = getEventPoint(evt);

	p = p.matrixTransform(g.getCTM().inverse());

	// Compute new scale matrix in current mouse position
	var k = root.createSVGMatrix().translate(p.x, p.y).scale(z).translate(-p.x, -p.y);

        setCTM(g, g.getCTM().multiply(k));

	if(typeof(stateTf) == "undefined")
		stateTf = g.getCTM().inverse();

	stateTf = stateTf.multiply(k.inverse());
}

/**
 * Handle mouse move event.
 */
function handleMouseMove(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(state == 'pan' && enablePan) {
		// Pan mode
		var p = getEventPoint(evt).matrixTransform(stateTf);

		setCTM(g, stateTf.inverse().translate(p.x - stateOrigin.x, p.y - stateOrigin.y));
	} else if(state == 'drag' && enableDrag) {
		// Drag mode
		var p = getEventPoint(evt).matrixTransform(g.getCTM().inverse());

		setCTM(stateTarget, root.createSVGMatrix().translate(p.x - stateOrigin.x, p.y - stateOrigin.y).multiply(g.getCTM().inverse()).multiply(stateTarget.getCTM()));

		stateOrigin = p;
	}
}

/**
 * Handle click event.
 */
function handleMouseDown(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	var g = getRoot(svgDoc);

	if(
		evt.target.tagName == "svg" 
		|| !enableDrag // Pan anyway when drag is disabled and the user clicked on an element 
	) {
		// Pan mode
		state = 'pan';

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	} else {
		// Drag mode
		state = 'drag';

		stateTarget = evt.target;

		stateTf = g.getCTM().inverse();

		stateOrigin = getEventPoint(evt).matrixTransform(stateTf);
	}
}

/**
 * Handle mouse button release event.
 */
function handleMouseUp(evt) {
	if(evt.preventDefault)
		evt.preventDefault();

	evt.returnValue = false;

	var svgDoc = evt.target.ownerDocument;

	if(state == 'pan' || state == 'drag') {
		// Quit pan mode
		state = '';
	}
}

]]></script><g id="viewport" transform="scale(0.5,0.5) translate(0,0)"><g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 880)">
<title>recycle.test</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-880 1020.4277,-880 1020.4277,4 -4,4"/>
<g id="clust1" class="cluster">
<title>cluster_L</title>
<polygon fill="none" stroke="#000000" points="8,-652 8,-868 686,-868 686,-652 8,-652"/>
</g>
<!-- L -->
<g id="node1" class="node">
<title>L</title>
<polygon fill="#f8f8f8" stroke="#000000" points="677.8438,-860 16.1562,-860 16.1562,-660 677.8438,-660 677.8438,-860"/>
<text text-anchor="start" x="24.0781" y="-830.4" font-family="Times,serif" font-size="32.00" fill="#000000">File: recycle.test</text>
<text text-anchor="start" x="24.0781" y="-798.4" font-family="Times,serif" font-size="32.00" fill="#000000">Type: alloc_space</text>
<text text-anchor="start" x="24.0781" y="-766.4" font-family="Times,serif" font-size="32.00" fill="#000000">Time: Mar 20, 2017 at 10:01pm (EDT)</text>
<text text-anchor="start" x="24.0781" y="-734.4" font-family="Times,serif" font-size="32.00" fill="#000000">158.09GB of 269.78GB total (58.60%)</text>
<text text-anchor="start" x="24.0781" y="-702.4" font-family="Times,serif" font-size="32.00" fill="#000000">Dropped 8 nodes (cum &lt;= 1.35GB)</text>
<text text-anchor="start" x="24.0781" y="-670.4" font-family="Times,serif" font-size="32.00" fill="#000000">Showing top 10 nodes out of 18 (cum &gt;= 1.52GB)</text>
</g>
<!-- N1 -->
<g id="node2" class="node">
<title>N1</title>
<g id="a_node2"><a xlink:title="runtime.goexit (158.21GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="789.7698,-778 696.2302,-778 696.2302,-742 789.7698,-742 789.7698,-778"/>
<text text-anchor="middle" x="743" y="-761.6" font-family="Times,serif" font-size="8.00" fill="#000000">runtime.goexit</text>
<text text-anchor="middle" x="743" y="-753.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 158.21GB(58.64%)</text>
</a>
</g>
</g>
<!-- N2 -->
<g id="node3" class="node">
<title>N2</title>
<g id="a_node3"><a xlink:title="github.com/PermissionData/log/graylog.(*message).Write (158.09GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="914.43,-610 571.57,-610 571.57,-560 914.43,-560 914.43,-610"/>
<text text-anchor="middle" x="743" y="-594.8" font-family="Times,serif" font-size="14.00" fill="#000000">github.com/PermissionData/log/graylog.(*message).Write</text>
<text text-anchor="middle" x="743" y="-580.8" font-family="Times,serif" font-size="14.00" fill="#000000">15.76GB(5.84%)</text>
<text text-anchor="middle" x="743" y="-566.8" font-family="Times,serif" font-size="14.00" fill="#000000">of 158.09GB(58.60%)</text>
</a>
</g>
</g>
<!-- N1&#45;&gt;N2 -->
<g id="edge1" class="edge">
<title>N1&#45;&gt;N2</title>
<g id="a_edge1"><a xlink:title="runtime.goexit ... github.com/PermissionData/log/graylog.(*message).Write (158.09GB)">
<path fill="none" stroke="#000000" stroke-width="3" stroke-dasharray="1,5" d="M743,-741.9311C743,-713.3968 743,-657.3692 743,-620.5606"/>
<polygon fill="#000000" stroke="#000000" stroke-width="3" points="746.5001,-620.2669 743,-610.2669 739.5001,-620.2669 746.5001,-620.2669"/>
</a>
</g>
<g id="a_edge1&#45;label"><a xlink:title="runtime.goexit ... github.com/PermissionData/log/graylog.(*message).Write (158.09GB)">
<text text-anchor="middle" x="773.7241" y="-630.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 158.09GB</text>
</a>
</g>
</g>
<!-- N3 -->
<g id="node4" class="node">
<title>N3</title>
<g id="a_node4"><a xlink:title="compress/flate.NewWriter (140.81GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="876.6253,-510 609.3747,-510 609.3747,-430 876.6253,-430 876.6253,-510"/>
<text text-anchor="middle" x="743" y="-486.8" font-family="Times,serif" font-size="24.00" fill="#000000">compress/flate.NewWriter</text>
<text text-anchor="middle" x="743" y="-462.8" font-family="Times,serif" font-size="24.00" fill="#000000">130.91GB(48.53%)</text>
<text text-anchor="middle" x="743" y="-438.8" font-family="Times,serif" font-size="24.00" fill="#000000">of 140.81GB(52.19%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N3 -->
<g id="edge2" class="edge">
<title>N2&#45;&gt;N3</title>
<g id="a_edge2"><a xlink:title="github.com/PermissionData/log/graylog.(*message).Write ... compress/flate.NewWriter (140.81GB)">
<path fill="none" stroke="#000000" stroke-width="3" stroke-dasharray="1,5" d="M743,-559.7628C743,-548.1715 743,-533.9941 743,-520.3606"/>
<polygon fill="#000000" stroke="#000000" stroke-width="3" points="746.5001,-520.0927 743,-510.0928 739.5001,-520.0928 746.5001,-520.0927"/>
</a>
</g>
<g id="a_edge2&#45;label"><a xlink:title="github.com/PermissionData/log/graylog.(*message).Write ... compress/flate.NewWriter (140.81GB)">
<text text-anchor="middle" x="773.7241" y="-530.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 140.81GB</text>
</a>
</g>
</g>
<!-- N8 -->
<g id="node9" class="node">
<title>N8</title>
<g id="a_node9"><a xlink:title="compress/flate.(*Writer).Close (1.52GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="1009.3208,-488 894.6792,-488 894.6792,-452 1009.3208,-452 1009.3208,-488"/>
<text text-anchor="middle" x="952" y="-471.6" font-family="Times,serif" font-size="8.00" fill="#000000">compress/flate.(*Writer).Close</text>
<text text-anchor="middle" x="952" y="-463.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1.52GB(0.56%)</text>
</a>
</g>
</g>
<!-- N2&#45;&gt;N8 -->
<g id="edge9" class="edge">
<title>N2&#45;&gt;N8</title>
<g id="a_edge9"><a xlink:title="github.com/PermissionData/log/graylog.(*message).Write ... compress/flate.(*Writer).Close (1.52GB)">
<path fill="none" stroke="#000000" stroke-dasharray="1,5" d="M792.7103,-559.8855C820.3973,-545.6589 855.3629,-527.2964 886,-510 895.2839,-504.7587 905.1727,-498.9113 914.3936,-493.3408"/>
<polygon fill="#000000" stroke="#000000" points="916.2628,-496.3005 922.988,-488.1137 912.6254,-490.3198 916.2628,-496.3005"/>
</a>
</g>
<g id="a_edge9&#45;label"><a xlink:title="github.com/PermissionData/log/graylog.(*message).Write ... compress/flate.(*Writer).Close (1.52GB)">
<text text-anchor="middle" x="875.7241" y="-530.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.52GB</text>
</a>
</g>
</g>
<!-- N4 -->
<g id="node5" class="node">
<title>N4</title>
<g id="a_node5"><a xlink:title="compress/flate.(*compressor).init (9.90GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="838.0146,-380 647.9854,-380 647.9854,-344 838.0146,-344 838.0146,-380"/>
<text text-anchor="middle" x="743" y="-364.6" font-family="Times,serif" font-size="13.00" fill="#000000">compress/flate.(*compressor).init</text>
<text text-anchor="middle" x="743" y="-351.6" font-family="Times,serif" font-size="13.00" fill="#000000">9.90GB(3.67%)</text>
</a>
</g>
</g>
<!-- N3&#45;&gt;N4 -->
<g id="edge3" class="edge">
<title>N3&#45;&gt;N4</title>
<g id="a_edge3"><a xlink:title="compress/flate.NewWriter &#45;&gt; compress/flate.(*compressor).init (9.90GB)">
<path fill="none" stroke="#000000" d="M743,-429.7848C743,-416.7445 743,-402.5548 743,-390.5439"/>
<polygon fill="#000000" stroke="#000000" points="746.5001,-390.2214 743,-380.2215 739.5001,-390.2215 746.5001,-390.2214"/>
</a>
</g>
<g id="a_edge3&#45;label"><a xlink:title="compress/flate.NewWriter &#45;&gt; compress/flate.(*compressor).init (9.90GB)">
<text text-anchor="middle" x="766.7241" y="-400.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 9.90GB</text>
</a>
</g>
</g>
<!-- N5 -->
<g id="node6" class="node">
<title>N5</title>
<g id="a_node6"><a xlink:title="bytes.(*Buffer).Write (1.52GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="994.3478,-208 909.6522,-208 909.6522,-172 994.3478,-172 994.3478,-208"/>
<text text-anchor="middle" x="952" y="-191.6" font-family="Times,serif" font-size="8.00" fill="#000000">bytes.(*Buffer).Write</text>
<text text-anchor="middle" x="952" y="-183.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1.52GB(0.56%)</text>
</a>
</g>
</g>
<!-- N6 -->
<g id="node7" class="node">
<title>N6</title>
<g id="a_node7"><a xlink:title="bytes.(*Buffer).grow (1.52GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="993.8955,-122 910.1045,-122 910.1045,-86 993.8955,-86 993.8955,-122"/>
<text text-anchor="middle" x="952" y="-105.6" font-family="Times,serif" font-size="8.00" fill="#000000">bytes.(*Buffer).grow</text>
<text text-anchor="middle" x="952" y="-97.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1.52GB(0.56%)</text>
</a>
</g>
</g>
<!-- N5&#45;&gt;N6 -->
<g id="edge4" class="edge">
<title>N5&#45;&gt;N6</title>
<g id="a_edge4"><a xlink:title="bytes.(*Buffer).Write &#45;&gt; bytes.(*Buffer).grow (1.52GB)">
<path fill="none" stroke="#000000" d="M952,-171.7616C952,-160.3597 952,-145.4342 952,-132.494"/>
<polygon fill="#000000" stroke="#000000" points="955.5001,-132.2121 952,-122.2121 948.5001,-132.2121 955.5001,-132.2121"/>
</a>
</g>
<g id="a_edge4&#45;label"><a xlink:title="bytes.(*Buffer).Write &#45;&gt; bytes.(*Buffer).grow (1.52GB)">
<text text-anchor="middle" x="975.7241" y="-142.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.52GB</text>
</a>
</g>
</g>
<!-- N7 -->
<g id="node8" class="node">
<title>N7</title>
<g id="a_node8"><a xlink:title="bytes.makeSlice (1.52GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="992.7592,-36 911.2408,-36 911.2408,0 992.7592,0 992.7592,-36"/>
<text text-anchor="middle" x="952" y="-20" font-family="Times,serif" font-size="10.00" fill="#000000">bytes.makeSlice</text>
<text text-anchor="middle" x="952" y="-10" font-family="Times,serif" font-size="10.00" fill="#000000">1.52GB(0.56%)</text>
</a>
</g>
</g>
<!-- N6&#45;&gt;N7 -->
<g id="edge5" class="edge">
<title>N6&#45;&gt;N7</title>
<g id="a_edge5"><a xlink:title="bytes.(*Buffer).grow &#45;&gt; bytes.makeSlice (1.52GB)">
<path fill="none" stroke="#000000" d="M952,-85.7616C952,-74.3597 952,-59.4342 952,-46.494"/>
<polygon fill="#000000" stroke="#000000" points="955.5001,-46.2121 952,-36.2121 948.5001,-46.2121 955.5001,-46.2121"/>
</a>
</g>
<g id="a_edge5&#45;label"><a xlink:title="bytes.(*Buffer).grow &#45;&gt; bytes.makeSlice (1.52GB)">
<text text-anchor="middle" x="975.7241" y="-56.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.52GB</text>
</a>
</g>
</g>
<!-- N9 -->
<g id="node10" class="node">
<title>N9</title>
<g id="a_node10"><a xlink:title="compress/flate.(*compressor).close (1.52GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="1016.3555,-380 887.6445,-380 887.6445,-344 1016.3555,-344 1016.3555,-380"/>
<text text-anchor="middle" x="952" y="-363.6" font-family="Times,serif" font-size="8.00" fill="#000000">compress/flate.(*compressor).close</text>
<text text-anchor="middle" x="952" y="-355.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1.52GB(0.56%)</text>
</a>
</g>
</g>
<!-- N8&#45;&gt;N9 -->
<g id="edge6" class="edge">
<title>N8&#45;&gt;N9</title>
<g id="a_edge6"><a xlink:title="compress/flate.(*Writer).Close &#45;&gt; compress/flate.(*compressor).close (1.52GB)">
<path fill="none" stroke="#000000" d="M952,-451.6793C952,-434.821 952,-409.5651 952,-390.147"/>
<polygon fill="#000000" stroke="#000000" points="955.5001,-390.0501 952,-380.0502 948.5001,-390.0502 955.5001,-390.0501"/>
</a>
</g>
<g id="a_edge6&#45;label"><a xlink:title="compress/flate.(*Writer).Close &#45;&gt; compress/flate.(*compressor).close (1.52GB)">
<text text-anchor="middle" x="975.7241" y="-400.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.52GB</text>
</a>
</g>
</g>
<!-- N10 -->
<g id="node11" class="node">
<title>N10</title>
<g id="a_node11"><a xlink:title="compress/flate.(*compressor).store (1.52GB)">
<polygon fill="#f8f8f8" stroke="#000000" points="1015.9688,-294 888.0312,-294 888.0312,-258 1015.9688,-258 1015.9688,-294"/>
<text text-anchor="middle" x="952" y="-277.6" font-family="Times,serif" font-size="8.00" fill="#000000">compress/flate.(*compressor).store</text>
<text text-anchor="middle" x="952" y="-269.6" font-family="Times,serif" font-size="8.00" fill="#000000">0 of 1.52GB(0.56%)</text>
</a>
</g>
</g>
<!-- N9&#45;&gt;N10 -->
<g id="edge7" class="edge">
<title>N9&#45;&gt;N10</title>
<g id="a_edge7"><a xlink:title="compress/flate.(*compressor).close &#45;&gt; compress/flate.(*compressor).store (1.52GB)">
<path fill="none" stroke="#000000" d="M952,-343.7616C952,-332.3597 952,-317.4342 952,-304.494"/>
<polygon fill="#000000" stroke="#000000" points="955.5001,-304.2121 952,-294.2121 948.5001,-304.2121 955.5001,-304.2121"/>
</a>
</g>
<g id="a_edge7&#45;label"><a xlink:title="compress/flate.(*compressor).close &#45;&gt; compress/flate.(*compressor).store (1.52GB)">
<text text-anchor="middle" x="975.7241" y="-314.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.52GB</text>
</a>
</g>
</g>
<!-- N10&#45;&gt;N5 -->
<g id="edge8" class="edge">
<title>N10&#45;&gt;N5</title>
<g id="a_edge8"><a xlink:title="compress/flate.(*compressor).store ... bytes.(*Buffer).Write (1.52GB)">
<path fill="none" stroke="#000000" stroke-dasharray="1,5" d="M952,-257.7616C952,-246.3597 952,-231.4342 952,-218.494"/>
<polygon fill="#000000" stroke="#000000" points="955.5001,-218.2121 952,-208.2121 948.5001,-218.2121 955.5001,-218.2121"/>
</a>
</g>
<g id="a_edge8&#45;label"><a xlink:title="compress/flate.(*compressor).store ... bytes.(*Buffer).Write (1.52GB)">
<text text-anchor="middle" x="975.7241" y="-228.8" font-family="Times,serif" font-size="14.00" fill="#000000"> 1.52GB</text>
</a>
</g>
</g>
</g>
</g></svg>
